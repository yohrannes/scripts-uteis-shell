.nh
.TH "GH-CODESPACE-SSH" "1" "Nov 2023" "GitHub CLI 2.38.0" "GitHub CLI manual"

.SH NAME
.PP
gh-codespace-ssh - SSH into a codespace


.SH SYNOPSIS
.PP
\fBgh codespace ssh [<flags>...] [-- <ssh-flags>...] [<command>]\fR


.SH DESCRIPTION
.PP
The 'ssh' command is used to SSH into a codespace. In its simplest form, you can
run 'gh cs ssh', select a codespace interactively, and connect.

.PP
The 'ssh' command will automatically create a public/private ssh key pair in the
~/.ssh directory if you do not have an existing valid key pair. When selecting the
key pair to use, the preferred order is:

.RS
.IP "  1." 5
Key specified by -i in 
.IP "  2." 5
Automatic key, if it already exists
.IP "  3." 5
First valid key pair in ssh config (according to ssh -G)
.IP "  4." 5
Automatic key, newly created

.RE

.PP
The 'ssh' command also supports deeper integration with OpenSSH using a '--config'
option that generates per-codespace ssh configuration in OpenSSH format.
Including this configuration in your ~/.ssh/config improves the user experience
of tools that integrate with OpenSSH, such as bash/zsh completion of ssh hostnames,
remote path completion for scp/rsync/sshfs, git ssh remotes, and so on.

.PP
Once that is set up (see the second example below), you can ssh to codespaces as
if they were ordinary remote hosts (using 'ssh', not 'gh cs ssh').

.PP
Note that the codespace you are connecting to must have an SSH server pre-installed.
If the docker image being used for the codespace does not have an SSH server,
install it in your Dockerfile or, for codespaces that use Debian-based images,
you can add the following to your devcontainer.json:

.PP
"features": {
	"ghcr.io/devcontainers/features/sshd:1": {
		"version": "latest"
	}
}


.SH OPTIONS
.TP
\fB-c\fR, \fB--codespace\fR \fB<string>\fR
Name of the codespace

.TP
\fB--config\fR
Write OpenSSH configuration to stdout

.TP
\fB-d\fR, \fB--debug\fR
Log debug data to a file

.TP
\fB--debug-file\fR \fB<string>\fR
Path of the file log to

.TP
\fB--profile\fR \fB<string>\fR
Name of the SSH profile to use

.TP
\fB-R\fR, \fB--repo\fR \fB<string>\fR
Filter codespace selection by repository name (user/repo)

.TP
\fB--repo-owner\fR \fB<string>\fR
Filter codespace selection by repository owner (username or org)

.TP
\fB--server-port\fR \fB<int>\fR
SSH server port number (0 => pick unused)


.SH EXAMPLE
.EX
$ gh codespace ssh

$ gh codespace ssh --config > ~/.ssh/codespaces
$ printf 'Match all\\nInclude ~/.ssh/codespaces\\n' >> ~/.ssh/config


.EE


.SH SEE ALSO
.PP
\fBgh-codespace(1)\fR
