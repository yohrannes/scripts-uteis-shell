.nh
.TH "GH-AUTH-LOGIN" "1" "Nov 2023" "GitHub CLI 2.38.0" "GitHub CLI manual"

.SH NAME
.PP
gh-auth-login - Authenticate with a GitHub host


.SH SYNOPSIS
.PP
\fBgh auth login [flags]\fR


.SH DESCRIPTION
.PP
Authenticate with a GitHub host.

.PP
The default authentication mode is a web-based browser flow. After completion, an
authentication token will be stored securely in the system credential store.
If a credential store is not found or there is an issue using it gh will fallback to writing the token to a plain text file.
See \fBgh auth status\fR for its stored location.

.PP
Alternatively, use \fB--with-token\fR to pass in a token on standard input.
The minimum required scopes for the token are: "repo", "read:org".

.PP
Alternatively, gh will use the authentication token found in environment variables.
This method is most suitable for "headless" use of gh such as in automation. See
\fBgh help environment\fR for more info.

.PP
To use gh in GitHub Actions, add \fBGH_TOKEN: ${{ github.token }}\fR to "env".


.SH OPTIONS
.TP
\fB-p\fR, \fB--git-protocol\fR \fB<string>\fR
The protocol to use for git operations: {ssh|https}

.TP
\fB-h\fR, \fB--hostname\fR \fB<string>\fR
The hostname of the GitHub instance to authenticate with

.TP
\fB--insecure-storage\fR
Save authentication credentials in plain text instead of credential store

.TP
\fB-s\fR, \fB--scopes\fR \fB<strings>\fR
Additional authentication scopes to request

.TP
\fB-w\fR, \fB--web\fR
Open a browser to authenticate

.TP
\fB--with-token\fR
Read token from standard input


.SH EXAMPLE
.EX
# start interactive setup
$ gh auth login

# authenticate against github.com by reading the token from a file
$ gh auth login --with-token < mytoken.txt

# authenticate with a specific GitHub instance
$ gh auth login --hostname enterprise.internal


.EE


.SH SEE ALSO
.PP
\fBgh-auth(1)\fR
